name: Deploy (Development)
on:
    workflow_dispatch: 
jobs:
    deploy:
      runs-on: macos-15
      name: Deploy Development Documentation
      steps:
          - name: Prepare SSH Keys and Config
            shell: bash
            run: |
              mkdir -p ~/.ssh
              echo "${{ secrets.CATALYST_PRIVATE_KEY }}" > ~/.ssh/catalyst_private_key
              chmod 600 ~/.ssh/catalyst_private_key
              echo "${{ secrets.DOCS_DEPLOY_KEY }}" > ~/.ssh/docs_deploy_key
              chmod 600 ~/.ssh/docs_deploy_key
              cat << EOF > ~/.ssh/config
              Host github.com-CatalystUI-Documentation
              HostName github.com
              User git
              IdentityFile ~/.ssh/docs_deploy_key
              IdentitiesOnly yes
              
              Host github.com-CatalystUI-CatalystUI
              HostName github.com
              User git
              IdentityFile ~/.ssh/catalyst_private_key
              IdentitiesOnly yes
              EOF
              chmod 600 ~/.ssh/config
              ssh-keyscan github.com >> ~/.ssh/known_hosts
          - name: Checkout
            uses: actions/checkout@v4
            with:
              ref: main
          - name: Fix submodule URL for SSH
            run: |
              git submodule set-url src github.com-CatalystUI-CatalystUI:CatalystUI/CatalystUI.git
          - name: Initialize Submodules
            run: |
              git submodule update --init --recursive
          - name: Install PowerShell 7+
            run: |
              brew update
              brew install --cask powershell
          - name: Prepare .NET SNK
            uses: actions/setup-dotnet@v4
            with:
              dotnet-version: '9.0.x'
          - name: Prepare Mono
            run: |
              brew install mono
          - name: Create Project Signatures
            shell: pwsh
            working-directory: ./src/CatalystUI
            run: |
              ./CreateSignatures.ps1
          - name: Cache NuGet packages
            uses: actions/cache@v4
            with:
              path: ~/.nuget/packages
              key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
              restore-keys: |
                ${{ runner.os }}-nuget-
          - name: Restore Solution
            shell: pwsh
            working-directory: ./src/CatalystUI
            run: |
              dotnet restore ./CatalystUI.sln
          - name: Build Solution
            shell: pwsh
            working-directory: ./src/CatalystUI
            run: |
              dotnet build ./CatalystUI.sln -c Release -v m
          - name: Install DocFX
            shell: pwsh
            working-directory: ./src/CatalystUI
            run: |
              dotnet tool install -g docfx
          - name: Generate Documentation
            shell: pwsh
            working-directory: ./docs
            run: |
              $root = "${{ github.workspace }}"
              $env:PATH += ":$HOME/.dotnet/tools"
              docfx docfx.json
              New-Item -ItemType Directory -Force -Path "$root/_docfx_temp"
              Copy-Item -Path "./_site/*" -Destination "$root/_docfx_temp" -Recurse -Force

              Get-ChildItem -Path $root -Force -Exclude '_docfx_temp' | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue
          - name: Configure for Git Upload
            shell: pwsh
            run: |
              Set-Location -Path "${{ github.workspace }}"
              if (Test-Path ".git") { Remove-Item -Recurse -Force ".git" }
              git init
              git config --global user.email "github-actions[bot]@users.noreply.github.com"
              git config --global user.name "github-actions[bot]"
              git remote add origin github.com-CatalystUI-Documentation:CatalystUI/Documentation.git
              git fetch origin docs-dev
              git checkout -t origin/docs-dev
          - name: Clone Documentation
            shell: pwsh
            run: |
              $root = "${{ github.workspace }}"
              Get-ChildItem -Path $root -Exclude '.git', '_docfx_temp', 'CNAME' | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue
              Copy-Item -Path "$root/_docfx_temp/*" -Destination $root -Recurse -Force
              Remove-Item -Recurse -Force "$root/_docfx_temp"
          - name: Commit and Push Documentation
            shell: pwsh
            run: |
              git add -A
              git commit -m "Update development docs from ${{ github.sha }}" || echo "No changes to commit"
              git push origin docs-dev
          - name: Upload Pages Artifact
            uses: actions/upload-pages-artifact@v3
            with:
              path: ./
    deploy-pages:
      needs: deploy
      runs-on: ubuntu-latest
      permissions:
        pages: write
        id-token: write
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      steps:
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4